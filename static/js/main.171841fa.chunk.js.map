{"version":3,"sources":["Header.js","MemeGenerator.js","App.js","index.js"],"names":["Header","animationIn","src","alt","animationInDuration","MemeGenerator","state","topText","bottomText","randomImg","allMemeImgs","handleChange","e","target","name","value","setState","handleGenerator","preventDefault","randomNumber","Math","floor","random","length","randomMemeImg","url","downloadMeme","domtoimage","toBlob","document","getElementById","then","blob","saveAs","fetch","response","json","memes","data","className","type","placeholder","this","onChange","onClick","id","Component","App","ReactDOM","render"],"mappings":"+OAoBeA,EAfA,WACX,OAGI,gCACI,kBAAC,WAAD,CAAUC,YAAY,UAClB,yBAAKC,IAAI,uDAAuDC,IAAI,aAExE,kBAAC,WAAD,CAAUF,YAAY,aAAaG,oBAAqB,KACpD,gD,yEC+DDC,E,2MAtEXC,MAAQ,CACJC,QAAS,GACTC,WAAY,GACZC,UAAW,8CACXC,YAAa,I,EAgBjBC,aAAe,SAACC,GAAO,IAAD,EACMA,EAAEC,OAAlBC,EADU,EACVA,KAAMC,EADI,EACJA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG5BE,gBAAkB,SAACL,GACfA,EAAEM,iBACF,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAW,EAAKhB,MAAMI,YAAYa,QACjEC,EAAgB,EAAKlB,MAAMI,YAAYS,GAAcM,IAC3D,EAAKT,SAAS,CAAEP,UAAWe,K,EAK/BE,aAAe,SAACd,GACZA,EAAEM,iBACFS,IAAWC,OAAOC,SAASC,eAAe,SACrCC,MAAK,SAAUC,GACZC,iBAAOD,EAAM,mB,mFA9BJ,IAAD,OAEhBE,MAAM,qCACDH,MAAK,SAAAI,GAAQ,OAAIA,EAASC,UAC1BL,MAAK,SAAAI,GAAa,IACPE,EAAUF,EAASG,KAAnBD,MAER,EAAKrB,SAAS,CAAEN,YAAa2B,S,+BA+BrC,OACI,yBAAKE,UAAU,QACX,0BAAMA,UAAU,aACZ,2BAAOzB,KAAK,UAAU0B,KAAK,OAAOC,YAAY,WAAW1B,MAAO2B,KAAKpC,MAAMC,QAASoC,SAAUD,KAAK/B,eAEnG,2BAAOG,KAAK,aAAa0B,KAAK,OAAOC,YAAY,cAAc1B,MAAO2B,KAAKpC,MAAME,WAAYmC,SAAUD,KAAK/B,eAE5G,4BAAQiC,QAASF,KAAKzB,iBAAtB,cAIJ,yBAAKsB,UAAU,OAAOM,GAAG,QAAQ,yBAAK3C,IAAKwC,KAAKpC,MAAMG,UAAWN,IAAI,KACjE,wBAAIoC,UAAU,WAAWG,KAAKpC,MAAMC,SACpC,wBAAIgC,UAAU,cAAcG,KAAKpC,MAAME,aAI3C,4BAAQ+B,UAAU,cAAcK,QAASF,KAAKhB,cAA9C,sB,GAhEYoB,aCSbC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASC,eAAe,W","file":"static/js/main.171841fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Animated } from 'react-animated-css';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n\r\n\r\n        <header>\r\n            <Animated animationIn=\"rollIn\" >\r\n                <img src=\"https://static.thenounproject.com/png/105263-200.png\" alt=\"derpina\" />\r\n            </Animated>\r\n            <Animated animationIn=\"rubberBand\" animationInDuration={2000} >\r\n                <p>Meme Generator</p>\r\n            </Animated>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n\r\nclass MemeGenerator extends Component {\r\n    state = {\r\n        topText: '',\r\n        bottomText: '',\r\n        randomImg: 'https://imgflip.com/s/meme/Futurama-Fry.jpg',\r\n        allMemeImgs: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://api.imgflip.com/get_memes')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const { memes } = response.data\r\n\r\n                this.setState({ allMemeImgs: memes });\r\n            })\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleGenerator = (e) => {\r\n        e.preventDefault()\r\n        const randomNumber = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randomMemeImg = this.state.allMemeImgs[randomNumber].url\r\n        this.setState({ randomImg: randomMemeImg });\r\n\r\n\r\n    }\r\n\r\n    downloadMeme = (e) => {\r\n        e.preventDefault();\r\n        domtoimage.toBlob(document.getElementById(\"meme\"))\r\n            .then(function (blob) {\r\n                saveAs(blob, 'myImage.png');\r\n            });\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='main'>\r\n                <form className=\"meme-form\">\r\n                    <input name='topText' type=\"text\" placeholder='Top Text' value={this.state.topText} onChange={this.handleChange} />\r\n\r\n                    <input name='bottomText' type=\"text\" placeholder='Bottom Text' value={this.state.bottomText} onChange={this.handleChange} />\r\n\r\n                    <button onClick={this.handleGenerator}>Get Image</button>\r\n\r\n                </form>\r\n\r\n                <div className='meme' id='meme' ><img src={this.state.randomImg} alt='' />\r\n                    <h2 className='topText'>{this.state.topText}</h2>\r\n                    <h2 className='bottomText'>{this.state.bottomText}</h2>\r\n\r\n                </div>\r\n\r\n                <button className='downloadBtn' onClick={this.downloadMeme}>Download meme</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemeGenerator;","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport MemeGenerator from './MemeGenerator';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <MemeGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}